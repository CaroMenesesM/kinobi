// Resolved accounts.
{% for account in accounts | sort(false, false, 'dependencyPosition') %}
  {% if account.defaultsTo.kind === 'account' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? {{ account.defaultsTo.name }}Account;
  {% elif account.defaultsTo.kind === 'address' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? publicKey('{{ account.defaultsTo.address }}');
  {% elif account.defaultsTo.kind === 'program' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? { ...getProgramAddressWithFallback(context, '{{ account.defaultsTo.program.name }}', '{{ account.defaultsTo.program.address }}'), isWritable: false };
  {% elif account.defaultsTo.kind === 'programId' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? { ...programId, isWritable: false };
  {% elif account.defaultsTo.kind === 'identity' and (account.isSigner or account.isOptionalSigner) %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? context.identity;
  {% elif account.defaultsTo.kind === 'identity' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? context.identity.publicKey;
  {% elif account.defaultsTo.kind === 'payer' and (account.isSigner or account.isOptionalSigner) %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? context.payer;
  {% elif account.defaultsTo.kind === 'payer' %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }} ?? context.payer.publicKey;
  {% else %}
    const {{ account.name }}Account = {{ accountsObj }}.{{ account.name }};
  {% endif %}
{% endfor %}

{% for account in accounts | sort(false, false, 'position') %}
  {% set isWritableString = 'true' if account.isWritable else 'false' %}
  // {{ account.titleCaseName }}{% if account.resolvedIsOptional %} (optional){% endif %}.
  {% if account.resolvedIsOptional %}
  if ({{ account.name }}Account) {
  {% endif %}
    {% if account.resolvedIsOptionalSigner %}
      if (isSigner({{ account.name }}Account)) {
        signers.push({{ account.name }}Account);
        keys.push({ pubkey: {{ account.name }}Account.publicKey, isSigner: true, isWritable: isWritable({{ account.name }}Account, {{ isWritableString }}) });
      } else {
        keys.push({ pubkey: {{ account.name }}Account, isSigner: false, isWritable: isWritable({{ account.name }}Account, {{ isWritableString }}) });
      }
    {% elif account.resolvedIsSigner  %}
      signers.push({{ account.name }}Account);
      keys.push({ pubkey: {{ account.name }}Account.publicKey, isSigner: true, isWritable: isWritable({{ account.name }}Account, {{ isWritableString }}) });
    {% else %}
      keys.push({ pubkey: {{ account.name }}Account, isSigner: false, isWritable: isWritable({{ account.name }}Account, {{ isWritableString }}) });
    {% endif %}
  {% if account.resolvedIsOptional %}
  }
  {% endif %}

{% endfor %}