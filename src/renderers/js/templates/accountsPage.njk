{% extends "layout.njk" %}
{% import "macros.njk" as macros %}

{% block main %}
{{ macros.imports(imports) }}

{{ macros.docblock(definedType.docs) }}
export type {{ name }} = Account<{{ name }}Data>

{{ macros.exportType(name + 'Data', typeDefinition) }}

export async function fetch{{ name }}(
  context: Pick<Context, 'serializer' | 'eddsa' | 'rpc'>,
  address: PublicKey,
) {
  const maybeAccount = await context.rpc.getAccount(address);
  assertAccountExists(maybeAccount, '{{ name }}');
  return deserialize{{ name }}(context, maybeAccount);
}

export function deserialize{{ name }}(
  context: Pick<Context, 'serializer' | 'eddsa'>,
  rawAccount: RpcAccount,
) {
  return deserializeAccount(rawAccount, get{{ name }}DataSerializer(context));
}

{{ macros.exportSerializer(name + 'Data', serializer) }}
{% endblock %}
