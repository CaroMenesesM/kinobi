{# Write a docblock from an array of strings. #}
{% macro docblock(docs) %}
{%- if docs.length === 1 -%}
/** {{ docs[0] }} */
{%- elif docs.length > 1 -%}
/**
{% for doc in docs %}
 * {{ doc }}
{% endfor %}
 */
{% endif %}
{% endmacro %}

{# Import dependencies from provided modules. #}
{% macro imports(importMap, moduleMap = {}) %}
{%- if not importMap.isEmpty() -%}
{{ importMap.toString(moduleMap) }}
{% endif %}
{% endmacro %}

{# Export a type or an enum. #}
{% macro exportType(name, typeManifest) %}
{%- if typeManifest.isEnum -%}
export enum {{ name }} {{ typeManifest.strictType }};
{%- else -%}
export type {{ name }} = {{ typeManifest.strictType }};
{% endif %}
{% endmacro %}

{# Export a serializer. #}
{% macro exportSerializer(name, typeManifest) %}
export function get{{ name }}Serializer(context: Pick<Context, 'serializer'>): Serializer<{{ name }}> {
  const s = context.serializer;
  return {{ typeManifest.serializer }};
}
{% endmacro %}
