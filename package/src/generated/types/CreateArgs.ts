/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { AssetData, AssetDataArgs, getAssetDataSerializer } from '.';
import {
  Context,
  GetDataEnumKind,
  GetDataEnumKindContent,
  Option,
  Serializer,
} from '@lorisleiva/js-core';

export type CreateArgs = {
  __kind: 'V1';
  asset_data: AssetData;
  decimals: Option<number>;
  max_supply: Option<bigint>;
};
export type CreateArgsArgs = {
  __kind: 'V1';
  asset_data: AssetDataArgs;
  decimals: Option<number>;
  max_supply: Option<number | bigint>;
};

export function getCreateArgsSerializer(
  context: Pick<Context, 'serializer'>
): Serializer<CreateArgsArgs, CreateArgs> {
  const s = context.serializer;
  return s.dataEnum<CreateArgs>(
    [
      [
        'V1',
        s.struct<GetDataEnumKindContent<CreateArgs, 'V1'>>(
          [
            ['asset_data', getAssetDataSerializer(context)],
            ['decimals', s.option(s.u8)],
            ['max_supply', s.option(s.u64)],
          ],
          'V1'
        ),
      ],
    ],
    'CreateArgs'
  ) as Serializer<CreateArgsArgs, CreateArgs>;
}

// Data Enum Helpers.
export function createArgs(
  kind: 'V1',
  data: GetDataEnumKindContent<CreateArgs, 'V1'>
): GetDataEnumKind<CreateArgs, 'V1'>;
export function createArgs<K extends CreateArgs['__kind']>(
  kind: K,
  data?: any
): CreateArgs & { __kind: K } {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}
export function isCreateArgs<K extends CreateArgs['__kind']>(
  kind: K,
  value: CreateArgs
): value is CreateArgs & { __kind: K } {
  return value.__kind === kind;
}
